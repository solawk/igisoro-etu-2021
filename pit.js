import{CanvasSettings,Images}from"./rendering.js";import*as UI_Factory from"./ui/uiFactory.js";export function Pit(t,e,i){this.table=t,this.side=e,this.index=i,this.occupation=0,this.delayedSeeds=0;const n=(this.getCenterX()+CanvasSettings.pitSize*(1/3))/(CanvasSettings.canvasW*CanvasSettings.dpr),a=(this.getCenterY()-CanvasSettings.pitSize*(1/3))/(CanvasSettings.canvasH*CanvasSettings.dpr);this.occupationTextContainer=UI_Factory.CreateTemporaryText(n,a,-1,0,1)}Pit.prototype.flushTextToVisualElements=function(){UI_Factory.MapElement(this.side+"Pit"+this.index+"Occupation",this.occupationTextContainer)},Pit.prototype.getCenterX=function(){if("hand"===this.side)return this.table.HandX();let t=this.index<8?this.index:15-this.index,e=1;"bottom"===this.side&&(e*=-1),"top"===this.table.side&&(e*=-1);let i=t-4;i>=0&&i++;let n=(i-.5*Math.sign(i))*CanvasSettings.pitGap,a=(i-.5*Math.sign(i))*CanvasSettings.pitSize;return Math.floor(CanvasSettings.canvasW*CanvasSettings.dpr/2+(n+a)*e)},Pit.prototype.getCenterY=function(){if("hand"===this.side)return this.table.HandY();let t=this.index<8?0:1,e=CanvasSettings.pitSize*(.5+t)+CanvasSettings.pitGap*t,i=-1;return"bottom"===this.side&&(i*=-1),"top"===this.table.side&&(i*=-1),Math.floor(CanvasSettings.canvasH*CanvasSettings.dpr/2+i*(CanvasSettings.pitBorderOffset+e))},Pit.prototype.isClicked=function(t,e){return t*=CanvasSettings.canvasW*CanvasSettings.dpr,e*=CanvasSettings.canvasH*CanvasSettings.dpr,Math.sqrt(Math.pow(t-this.getCenterX(),2)+Math.pow(e-this.getCenterY(),2))<CanvasSettings.pitSize/2},Pit.prototype.setOccupation=function(t){this.occupation=t,this.updateOccupationText()},Pit.prototype.addDelayedSeeds=function(t){this.delayedSeeds+=t,this.updateOccupationText()},Pit.prototype.updateOccupationText=function(){const t=this.occupation-this.delayedSeeds;this.occupationTextContainer.element.text=t>0?t:""},Pit.prototype.getOccupation=function(){return this.occupation},Pit.prototype.draw=function(t,e){const i=e?-1:1;this.occupationTextContainer.x=(this.getCenterX()+i*CanvasSettings.pitSize*(1/3))/(CanvasSettings.canvasW*CanvasSettings.dpr),this.occupationTextContainer.y=(this.getCenterY()-i*CanvasSettings.pitSize*(1/3))/(CanvasSettings.canvasH*CanvasSettings.dpr),this.occupationTextContainer.rotation=1===i?0:Math.PI,this.drawPit(e),t(this.getOccupation()-this.delayedSeeds,this.getCenterX(),this.getCenterY(),"hand"!==this.side?1:.6)},Pit.prototype.drawPit=function(t){"hand"!==this.side?CanvasSettings.context.drawImage(Images.get("pit").image,this.getCenterX()-CanvasSettings.pitSize/2,this.getCenterY()-CanvasSettings.pitSize/2,CanvasSettings.pitSize,CanvasSettings.pitSize):this.occupation+this.delayedSeeds>0&&(CanvasSettings.context.translate(this.getCenterX(),this.getCenterY()),CanvasSettings.context.rotate(t?Math.PI:0),CanvasSettings.context.drawImage(Images.get("handShadow").image,-CanvasSettings.pitSize/4,-CanvasSettings.pitSize/4-4,CanvasSettings.pitSize/2,CanvasSettings.pitSize/2),CanvasSettings.context.drawImage(Images.get("hand").image,-CanvasSettings.pitSize/4+CanvasSettings.pitSize/48,-CanvasSettings.pitSize/4-4,CanvasSettings.pitSize/2,CanvasSettings.pitSize/2),CanvasSettings.context.setTransform(1,0,0,1,0,0))},Pit.prototype.flushDelayedSeeds=function(t){this.delayedSeeds-=t,this.updateOccupationText()};