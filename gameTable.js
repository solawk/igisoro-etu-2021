import{Pit}from"./pit.js";import{Transfer}from"./transfer.js";import{CanvasSettings,Images,Redraw}from"./rendering.js";import{gameSettings}from"./client.js";import*as Subject from"./ui/uiSubject.js";import*as Bunches from"./bunches.js";import*as UI from"./ui/uiFactory.js";const ReverseStepMax=20,ReverseStepTime=16;export function GameTable(t,e,s,i,n,a,r){this.connector=t,this.side=a,this.opponent=r,this.stepTime=i,this.boost=!1,this.turn=e,this.rotateOccupations=n,this.handPitIndexPosition=0,this.handDrawOppositeSideFlag=!1,this.ReverseSource=-1,this.ReverseStep=0,this.meIsWinner=!1,this.winnerTextProgress=0,this.winnerText=null,this.aiSide=null,this.Pits=[];for(let t=0;t<16;t++)this.Pits.push(new Pit(this,"top",t)),this.Pits.push(new Pit(this,"bottom",t));this.Hand=new Pit(this,"hand",0),this.Transfers=[];let o=this;setInterval(function(){o.MoveTransfers(),o.MoveWinnerText()},16),this.LoadPitOccupation(s)}GameTable.prototype.Draw=function(t,e){this.DrawBorderLines(),this.DrawTurnIndicator();for(let t=0;t<this.Pits.length;t++)this.Pits[t].draw(this.DrawSeeds,this.turn!==this.side&&this.rotateOccupations&&null===this.aiSide);this.Hand.draw(this.DrawSeeds,this.turn!==this.side&&this.rotateOccupations);for(let t=0;t<this.Transfers.length;t++)this.Transfers[t].draw(this.DrawSeeds);this.DrawReverseArrows()},GameTable.prototype.Click=function(t,e){for(let s=0;s<this.Pits.length;s++)if(this.Pits[s].isClicked(t,e)){if(null!=this.aiSide&&this.Pits[s].side===this.aiSide)continue;return this.connector.ClientToServerCallbacks.StartMove.call(this.connector.Callers.Server,this.Pits[s].index,this.Pits[s].side),!0}return!1},GameTable.prototype.Destroy=function(){},GameTable.prototype.DrawBorderLines=function(){const t=[.35,.65];null!=this.opponent&&t.unshift(.025,.325),null!=this.aiSide&&t.push(.675,.975);const e=Images.get("border").image;let s=0,i=0,n=1;for(;1!==i;)i=t.length<n?1:t[n-1]+.003,CanvasSettings.context.drawImage(e,s*CanvasSettings.canvasW*CanvasSettings.dpr,CanvasSettings.canvasH*CanvasSettings.dpr/2-CanvasSettings.pitSize/8,(i-s)*CanvasSettings.canvasW*CanvasSettings.dpr,CanvasSettings.pitSize/4),t.length>=n&&(s=t[n]-.003),n+=2},GameTable.prototype.DrawSeeds=function(t,e,s,i=1){if(t<=0)return;let n=Bunches.positions(t),a=CanvasSettings.pitSize/6*Bunches.seedSize(t)*i;for(let t=0;t<n.length;t+=2){let i=n[t]*a,r=-n[t+1]*a;CanvasSettings.context.drawImage(Images.get("seed").image,e+i-a/2,s+r-a/2,a,a)}},GameTable.prototype.DrawTurnIndicator=function(){this.turn===this.side?CanvasSettings.context.drawImage(Images.get("turn").image,0,CanvasSettings.canvasH*CanvasSettings.dpr*.96875,CanvasSettings.canvasW*CanvasSettings.dpr,CanvasSettings.canvasH*CanvasSettings.dpr*(1/32)):(CanvasSettings.context.rotate(Math.PI),CanvasSettings.context.drawImage(Images.get("turn").image,-CanvasSettings.canvasW*CanvasSettings.dpr,-CanvasSettings.canvasH*CanvasSettings.dpr*(1/32),CanvasSettings.canvasW*CanvasSettings.dpr,CanvasSettings.canvasH*CanvasSettings.dpr*(1/32)),CanvasSettings.context.setTransform(1,0,0,1,0,0))},GameTable.prototype.DesignateWinner=function(t){this.meIsWinner=t===this.side,this.winnerTextProgress=40;const e=this.meIsWinner?locale[gameSettings.language].youWin:null!=this.opponent?this.opponent+locale[gameSettings.language].wins:locale[gameSettings.language].youWin;this.winnerText=UI.CreateText(.5,.5+.6*(this.meIsWinner?1:-1),-1,e,"winnerText",2),null==this.opponent&&this.rotateOccupations&&this.turn!==this.side&&(this.winnerText.rotation=Math.PI)},GameTable.prototype.CreateTransfer=function(t,e,s,i,n){this.handDrawOppositeSideFlag=!1;let a=-1;e===this.turn&&(a=s),i===this.turn&&(a=n),-1!==a?(a>7&&(a=15-a),0===a&&a++,this.handPitIndexPosition=a):this.handDrawOppositeSideFlag=!0,this.Transfers.push(new Transfer(this,t,e,s,i,n))},GameTable.prototype.MoveTransfers=function(){let t=!1;for(let e=0;e<this.Transfers.length;e++)null!=this.Transfers[e]&&(this.Transfers[e].step(),t=!0);t&&Redraw()},GameTable.prototype.MoveWinnerText=function(){this.winnerTextProgress>0&&(this.winnerTextProgress--,this.winnerText.y=.5+.25*(this.meIsWinner?1:-1)+.35*Math.pow(this.winnerTextProgress/40,2)*(this.meIsWinner?1:-1),Redraw())},GameTable.prototype.GetPit=function(t,e){if("hand"===t)return this.Hand;for(let s=0;s<this.Pits.length;s++)if(this.Pits[s].side===t&&this.Pits[s].index===e)return this.Pits[s]},GameTable.prototype.SetPitOccupation=function(t,e,s){let i;"hand"===t&&(i=this.Hand);for(let s=0;s<this.Pits.length;s++)this.Pits[s].side===t&&this.Pits[s].index===e&&(i=this.Pits[s]);i.setOccupation(s)},GameTable.prototype.SetTurn=function(t){this.turn=t,this.boost=!1,Subject.Notify("boostOff"),Redraw()},GameTable.prototype.LoadPitOccupation=function(t){for(let e=0;e<16;e++)this.SetPitOccupation("top",e,t.topOccupations[e]),this.SetPitOccupation("bottom",e,t.bottomOccupations[e]);this.SetPitOccupation("hand",0,0)},GameTable.prototype.SetReverse=function(t){if(this.ReverseSource=t,-1===this.ReverseSource)this.ReverseStep=0;else{const t=this;setTimeout(function(){t.IncreaseReverse(t)},16)}},GameTable.prototype.IncreaseReverse=function(t){t.ReverseStep++,t.ReverseStep<20&&setTimeout(function(){t.IncreaseReverse(t)},16),Redraw()},GameTable.prototype.DrawReverseArrows=function(){if(-1===this.ReverseSource)return;CanvasSettings.context.globalAlpha=this.ReverseStep/20*.65;let t=(CanvasSettings.pitSize+CanvasSettings.pitGap)*Math.pow(this.ReverseStep/20,.25),e=this.GetPit(this.turn,this.ReverseSource);const s="top"===this.side?180:0;switch(this.ReverseSource){case 1:case 6:this.DrawSingleReverseArrow(e,t,180+s),this.DrawSingleReverseArrow(e,t,s);break;case 8:this.DrawSingleReverseArrow(e,t,270+s),this.DrawSingleReverseArrow(e,t,s);break;case 15:this.DrawSingleReverseArrow(e,t,270+s),this.DrawSingleReverseArrow(e,t,180+s)}CanvasSettings.context.globalAlpha=1},GameTable.prototype.DrawSingleReverseArrow=function(t,e,s){CanvasSettings.context.translate(t.getCenterX(),t.getCenterY());let i="bottom"===this.turn?s:s+180;CanvasSettings.context.rotate(i*Math.PI/180),CanvasSettings.context.drawImage(Images.get("arrow").image,-CanvasSettings.pitSize/4+e,-CanvasSettings.pitSize/4,CanvasSettings.pitSize/2,CanvasSettings.pitSize/2),CanvasSettings.context.setTransform(1,0,0,1,0,0)},GameTable.prototype.HandX=function(){let t=1;"bottom"===this.side&&(t*=-1),"top"===this.turn&&(t*=-1);let e=this.handPitIndexPosition-4,s=e*CanvasSettings.pitGap,i=e*CanvasSettings.pitSize;return Math.floor(CanvasSettings.canvasW*CanvasSettings.dpr/2+(s+i)*t)},GameTable.prototype.HandY=function(){let t=CanvasSettings.pitSize,e=-1;return"bottom"===this.side&&(e*=-1),"top"===this.turn&&(e*=-1),!0===this.handDrawOppositeSideFlag&&(e*=-1),Math.floor(CanvasSettings.canvasH*CanvasSettings.dpr/2+e*(CanvasSettings.pitBorderOffset+t))},GameTable.prototype.PitsFlushTexts=function(){for(let t=0;t<this.Pits.length;t++)this.Pits[t].flushTextToVisualElements();this.Hand.flushTextToVisualElements()},GameTable.prototype.Boost=function(){this.boost=!0,this.connector.Callers.Server.boost=!0},GameTable.prototype.Deboost=function(){this.boost=!1,this.connector.Callers.Server.boost=!1};